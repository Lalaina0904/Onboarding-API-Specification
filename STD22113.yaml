openapi: 3.0.0
info:
    description: |
        This is an API Student Specification
    version: 1.2.0
    title: Onboarding - OpenAPI 3.0
    termsOfService: "http://swagger.io/terms/"
    contact:
        email: apiteam@swagger.io
    license:
        name: Apache 2.0
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
    # Added by API Auto Mocking Plugin
    - description: SwaggerHub API Auto Mocking
      url: https://virtserver.swaggerhub.com/HEILALAINA2/STD22113/1.2.0
    - url: "https://student.swagger.io/v2"
tags:
    - name: student
      description: Everything about students
      externalDocs:
          description: Find out more
          url: "http://swagger.io"

paths:
    /student:
        put:
            tags:
                - student
            summary: Update an existing student
            description: Update an existing student by Id
            operationId: updateStudent
            requestBody:
                description: Update an existent students in the store
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Student"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Student"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Student"
                required: true
            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Student"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Student"
                "400":
                    description: Invalid ID supplied
                "404":
                    description: students not found
                "405":
                    description: Validation exception
            security:
                - studentlist_auth:
                      - write:students
                      - read:students
        post:
            tags:
                - student
            summary: Add a new student to the list
            description: Add a new student to the list
            operationId: addStudent
            requestBody:
                description: Create a new studen in the list of student
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Student"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Student"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Student"
                required: true
            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Student"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Student"
                "405":
                    description: Invalid input
            security:
                - studentlist_auth:
                      - write:students
                      - read:students

    /student/{studentId}:
        get:
            tags:
                - student
            summary: Find student by ID
            description: Returns a single student
            operationId: getStudentById
            parameters:
                - name: studentId
                  in: path
                  description: ID of student to return
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Student"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Student"
                "400":
                    description: Invalid ID supplied
                "404":
                    description: student not found
            security:
                - api_key: []
                - studentlist_auth:
                      - write:students
                      - read:students
        post:
            tags:
                - student
            summary: Updates a student in the store with form data
            description: ""
            operationId: updateStudentWithForm
            parameters:
                - name: studentId
                  in: path
                  description: ID of student that needs to be updated
                  required: true
                  schema:
                      type: integer
                      format: int64
                - name: name
                  in: query
                  description: Name of student that needs to be updated
                  schema:
                      type: string
                - name: birthdate
                  in: query
                  description: birthdate of the student that needs to be updated
                  schema:
                      type: string
            responses:
                "405":
                    description: Invalid input
            security:
                - studentlist_auth:
                      - write:students
                      - read:students
        delete:
            tags:
                - student
            summary: Deletes a student
            description: delete a student
            operationId: deleteStudent
            parameters:
                - name: api_key
                  in: header
                  description: ""
                  required: false
                  schema:
                      type: string
                - name: studentId
                  in: path
                  description: Student id to delete
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "400":
                    description: Invalid student value
            security:
                - studentlist_auth:
                      - write:students
                      - read:students
components:
    schemas:
        Student:
            required:
                - id
                - name
                - birthdate
            type: object

            properties:
                id:
                    type: integer
                    format: int64
                    example: 10
                name:
                    type: string
                    example: Lalaina
                bierthdate:
                    type: string
                    example: 09/04/2023
                category:
                    $ref: "#/components/schemas/Category"
            xml:
                name: student

        Category:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 1
                name:
                    type: string
                    example: H4 student
            xml:
                name: category

        ApiResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                type:
                    type: string
                message:
                    type: string
            xml:
                name: "##default"

    securitySchemes:
        studentlist_auth:
            type: oauth2
            flows:
                implicit:
                    authorizationUrl: https://studentlist.swagger.io/oauth/authorize
                    scopes:
                        write:students: modify students in your account
                        read:students: read your students
        api_key:
            type: apiKey
            name: api_key
            in: header
