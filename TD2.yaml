openapi: 3.0.1
info:
    title: STD22113 - TD2 - API
    description: "API for students and teachers"
    version: 1.2.0
servers:
    - url: https://STD22113.com
tags:
    - name: Student
    - name: Teacher
paths:
    /student:
        get:
            tags:
                - Student
            operationId: getStudent
            summary: Get all students
            description: Get all students with details

            parameters:
                - name: page
                  in: query
                  schema:
                      type: integer

            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Student"

        put:
            tags:
                - Student
            operationId: updateStudent
            summary: Update an existing student
            description: Update an existing student by Id

            requestBody:
                description: Update an existent students in the store
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Student"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Student"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Student"
                required: true

            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Student"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Student"

        post:
            tags:
                - Student
            summary: Add a new student
            description: Add a new student
            operationId: addStudent

            requestBody:
                description: Create a new student in the list of student
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Student"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Student"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Student"

                required: true

            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Student"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Student"
                "405":
                    description: Invalid input

    /students/{id}:
        delete:
            tags:
                - Student
            operationId: deleteStudents by identifier
            summary: Delete students by identifier
            parameters:
                - name: id
                  in: path
                  schema:
                      type: integer
                  required: true
            responses:
                200:
                    description: Resource deleted
                400:
                    description: Bad request

    /teacher:
        get:
            tags:
                - Teacher
            operationId: getTeacher
            summary: Get all Teachers
            description: Get all teachers with details

            parameters:
                - name: page
                  in: query
                  schema:
                      type: integer

            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Teacher"

        put:
            tags:
                - Teacher
            operationId: updateTeacher
            summary: Update an existing teacher
            description: Update an existing teacher by Id

            requestBody:
                description: Update an existent teacher in the store
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Teacher"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Teacher"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Teacher"
                required: true

            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Teacher"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Teacher"

        post:
            tags:
                - Teacher
            summary: Add a new teacher
            description: Add a new teacher
            operationId: addTeacher

            requestBody:
                description: Create a new teacher in the list of teachers
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Teacher"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Teacher"
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: "#/components/schemas/Teacher"

                required: true

            responses:
                "200":
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Teacher"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Teacher"

    /teacher/{id}:
        delete:
            tags:
                - Teacher
            operationId: deleteTeacher by identifier
            summary: Delete teacher by identifier
            parameters:
                - name: id
                  in: path
                  schema:
                      type: integer
                  required: true
            responses:
                200:
                    description: Resource deleted
                400:
                    description: Bad request

components:
    schemas:
        Student:
            required:
                - id
                - name
                - birthdate
                - category
            type: object

            properties:
                id:
                    type: string
                    example: STD22113
                firstname:
                    type: string
                    example: Lalaina
                lastname:
                    type: string
                    example: ANDRIAMIAROZAKA
                birthdate:
                    type: string
                    example: 09/04/2023
                category:
                    $ref: "#/components/schemas/Category"
            xml:
                name: student

        Category:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 1
                name:
                    type: string
                    example: H4 student
            xml:
                name: category

        Teacher:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                firstname:
                    type: string
                    example: "Tokimahery"
                lastname:
                    type: string
                    example: "RAMAROZAKA"
                courses:
                    type: array
                    items:
                        $ref: "#/components/schemas/Course"

        Course:
            type: object
            required:
                - code
                - name
            properties:
                code:
                    type: string
                    example: "PROG1"
                name:
                    type: string
                    example: "Algorithmique"
